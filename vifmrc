" vim: filetype=vim:

" set cpoptions-=fst
set dotdirs=
set dotfiles
set fastrun
set grepprg='rg --line-number %i %a %s'
set history=1024
set hlsearch
set ignorecase
set incsearch
set nofollowlinks
set norunexec
set nowrap
set number
set relativenumber
" set previewoptions=hardgraphicsclear
set scrolloff=4
set slowfs=curlftpfs
set smartcase
set sortnumbers
set statusline="  Hint: %z%= %A %10u:%-7g %15E %20d  "
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set syscalls
set tabstop=4
set timefmt=%Y/%m/%d-%T
set timeoutlen=300
set trash
set undolevels=1024
set vicmd=$EDITOR
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks
set vimhelp
set wildmenu
set wildstyle=popup

colorscheme Molokai Default-256 Default


" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark C ~/Desktop/Code/
mark D ~/Downloads/
mark H ~/
mark M ~/Movies/
mark P ~/Pictures/
mark t ~/.local/share/vifm/Trash/
mark c ~/.config/
mark d ~/Desktop/
mark h ~/
mark m ~/Music/
mark p ~/Peki/
mark r /

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep nvim "+grep %a"
command! reload :write | restart full

" filter! /^.*\.(lo|so|a|o|d|class|py[co]|meta)$/

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros like %f, %F, %d, %D may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filextype {*.pdf},<application/pdf> mupdf %c &, zathura %c %i &, apvlv %c, xpdf %c
fileviewer {*.pdf},<application/pdf>
			\ vifmimg pdfpreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

" Mobi
filextype {*.mobi},<application/x-mobipocket-ebook> mupdf %c &, zathura %c %i &, calibre %c &

" PostScript
filextype {*.ps,*.eps,*.ps.gz},<application/postscript>
			\ {View in zathura}
			\ zathura %f,
			\ {View in gv}
			\ gv %c %i &,

" Djvu
filextype {*.djvu},<image/vnd.djvu>
			\ {View in zathura}
			\ zathura %f,
			\ {View in apvlv}
			\ apvlv %f,

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.m4b,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
			\<audio/*>
			\ mpv --no-audio-display %f,

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
			\*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
			\*.as[fx]},
			\<video/*>
			\ {View using mpv}
			\ mpv %f

filetype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
			\*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
			\*.as[fx]},
			\<video/*>
			\ {View using mpv}
			\ mpv %f &

fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
			\*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.divx,
			\*.as[fx]},
			\<video/*>
			\ vifmimg videopreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

" Web
filextype {*.html,*.htm},<text/html>
			\ {Open with firefox}
			\ firefox %f &,
filetype {*.html,*.htm},<text/html> links, lynx

" Man page
filetype {*.[1-8]},<text/troff> man ./%c
fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Images
filextype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
			\ {View in nsxiv}
			\ nsxiv %f,
			\ {View in fex}
			\ feh %f,
			\ {View in gpicview}
			\ gpicview %c,
			\ {View in shotwell}
			\ shotwell,
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.xpm},<image/*>
			\ vifmimg draw %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

fileviewer {*.gif}
			\ vifmimg gifpreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

fileviewer {*.ico,*.icon}
			\ vifmimg magickpreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

fileviewer <audio/*>
			\ vifmimg audiopreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

fileviewer <font/*>
			\ vifmimg fontpreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

" Comics
filextype *.cbr YACReader %f &
filetype  *.cbr YACReader %f &
filextype *.cbz YACReader %f &
filetype  *.cbz YACReader %f &

fileviewer *.cbr
			\ vifmimg comicpreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

fileviewer *.cbz
			\ vifmimg comicpreview %px %py %pw %ph %c
			\ %pc
			\ vifmimg clear

" OpenRaster
filextype *.ora
			\ {Edit in MyPaint}
			\ mypaint %f,

" MD5
filetype *.md5
			\ {Check MD5 hash sum}
			\ md5sum -c %f %S,

" SHA1
filetype *.sha1
			\ {Check SHA1 hash sum}
			\ sha1sum -c %f %S,

" SHA256
filetype *.sha256
			\ {Check SHA256 hash sum}
			\ sha256sum -c %f %S,

" SHA512
filetype *.sha512
			\ {Check SHA512 hash sum}
			\ sha512sum -c %f %S,

" GPG signature
filetype {*.asc},<application/pgp-signature>
			\ {Check signature}
			\ !!gpg --verify %c,

" Torrent
filetype {*.torrent},<application/x-bittorrent> ktorrent %f &
fileviewer {*.torrent},<application/x-bittorrent> dumptorrent -v %c

" FuseZipMount
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
			\<application/zip,application/java-archive>
			\ {Mount with fuse-zip}
			\ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
			\ {View contents}
			\ zip -sf %c | less,
			\ {Extract here}
			\ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz},
			\<application/x-tar>
			\ {Mount with archivemount}
			\ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer {*.tar},<application/x-tar> tar -tf %c

" Rar2FsMount and rar archives
filetype {*.rar},<application/x-rar>
			\ {Mount with rar2fs}
			\ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.rar},<application/x-rar> unrar v %c

" IsoMount
filetype {*.iso},<application/x-iso9660-image>
			\ {Mount with fuseiso}
			\ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
			\ {Mount with sshfs}
			\ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
			\ {Mount with curlftpfs}
			\ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype {*.7z},<application/x-7z-compressed>
			\ {Mount with fuse-7z}
			\ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

" Office files
filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
			\<application/vnd.openxmlformats-officedocument.*,
			\application/msword,
			\application/vnd.ms-excel>
			\ libreoffice %f &
fileviewer {*.doc},<application/msword> catdoc %c
fileviewer {*.docx},
			\<application/
			\vnd.openxmlformats-officedocument.wordprocessingml.document>
			\ docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
			\ {View in thunar}
			\ Thunar %f &

filextype .*/
			\ {View in thunar}
			\ Thunar %f &

" fileviewer */ exa --time-style=long-iso --color=always --group-directories-first --icons --group -1a
fileviewer */  /home/beron/.config/scripts/lsdir
fileviewer .*/ /home/beron/.config/scripts/lsdir

" fileviewer .*/
" 			\ /home/beronthecolossus/Peki/C++/Projects/OK/List/bin/List-meson -a1

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" C/C++
fileviewer {*.[ch],*.[ch]pp,*.[ch]xx,*.C,*.H,*.[ch]++}
			\ pistol %f

" JS/HTML/CSS
fileviewer {*.js,*.htm,*.html,*.css,*.scss,*.less}
			\ pistol %f

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

nnoremap s :shell<cr>

nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

nnoremap o :write | !xdg-open %f<CR>
nnoremap O :write | !xdg-open %f<CR>

nnoremap e :write | !nvim %f<CR>
nnoremap E :write | !xdg-open %f<CR>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Interaction with system clipboard
if executable('xclip')
    " Yank current directory path into the clipboard
    nnoremap yd :!echo %d | xclip %i<cr>
    " Yank current file path into the clipboard
    nnoremap yf :!echo %c:p | xclip %i<cr>
elseif executable('xsel')
    " Yank current directory path into primary and selection clipboards
    nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                \ echo -n %d | xsel --clipboard --input %i<cr>
    " Yank current file path into into primary and selection clipboards
    nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                \ echo -n %c:p | xsel --clipboard --input %i<cr>
endif

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open console in current directory
nnoremap ,t :!alacritty &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
" nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>
" Open gvim to edit vifmrc
" nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

nnoremap ,c :write | $EDITOR $MYVIFMRC | restart<cr>
" Open nvim to edit vifmrc
nnoremap ,C :!$EDITOR $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" Midnight commander alike mappings
" Open current directory in the other pane
" nnoremap <a-i> :sync<cr>
" Open directory under cursor in the other pane
" nnoremap <a-o> :sync %c<cr>
" Swap panes
" nnoremap <c-u> <c-w>x

" dop is taken
nnoremap dr :!dragon-drop -x %f<CR>
nnoremap da :!dragon-drop -a -x %f<CR>

map > :!vifmimg inc<CR>
map < :!vifmimg dec<CR>


" Filetypes
set classify=' :dir:/, :exe:, :reg:, :link:,? :?:, ::../::'

" Dirs
set classify+=' ::.git/::/,
             \  ::.config/::/,
             \  ::Documents/::/,
             \  ::Development/::/,
             \  ::Downloads/::/,
             \  ::Dropbox/::/,
             \  ::Google\ Drive/::/,
             \  ::gitrepos/::/,
             \  ::Music/::/,
             \  ::Pictures/::/,
             \  ::Public/::/,
             \  ::Templates/::/,
             \  ::Videos/::/,
             \  ::node_modules/::/'

" Files
set classify+=' ::.Xauthority,,.Xdefaults,,.Xresources,,.bash_aliases,,.bashprofile,,.bash_profile,,.bash_logout,,.bash_history,,.bashrc,,.dmrc,,.DS_Store,,.fasd,,.gitconfig,,.gitattributes,,.gitignore,,.inputrc,,.jack-settings,,.mime.types,,.nvidia-settings-rc,,.pam_environment,,.profile,,.recently-used,,.selected_editor,,.tmux.conf,,.xinitrc,,.xinputrc,,config,,bspwmrc,,sxhkdrc,,Makefile,,Makefile.in,,Makefile.ac,,mimeapps.list,,.zshenv,,.zprofile,,.zshrc,,.zlogin,,.zlogout,,vifmrc,,yabairc,,skhdrc,,ini,,user-dirs.dirs::,
             \  ::.fehbg::,
             \  ::.vim,,.vimrc,,.viminfo,,init.vim::,
             \  ::Dockerfile,,docker-compose.yml::,
             \  ::dropbox::,
             \  ::favicon.ico::,
             \  ::a.out,,configure::,
             \  ::config.mk,,config.m4,,config.ac::,
             \  ::Rakefile::,
             \  ::gruntfile.coffee,,gruntfile.js,,gruntfile.ls::,
             \  ::gulpfile.coffee,,gulpfile.js,,gulpfile.ls::,
             \  ::ledger::,
             \  ::package.json,,package-lock.json,,webpack.config.js::,
             \  ::.ncmpcpp,,playlists::,
             \  ::known_hosts,,authorized_keys,,license,,LICENSE.md,,LICENSE,,LICENSE.txt::,
             \  ::procfile::,
             \  ::react.jsx::,
             \  ::README.rst,,README.md,,README.markdown,,README,,README.txt::'

" Extensions
set classify+=' ::*.7z,,*.apk,,*.bz2,,*.cpio,,*.deb,,*.gz,,*.gzip,,*.gem,,*.lha,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.tar,,*.tgz,,*.xbps,,*.xz,,*.zip::,
             \  ::*.a,,*.cmake,,*.jl,,*.o,,*.so::,
             \  ::*.ai::,
             \  ::*.asm,,*.css,,*.less,,*.s,,*.sh,,*.zsh::,
             \  ::*.asp,,*.rom,,*.efi,,*.elf,,*.fish::,
             \  ::*.aup,,*.cue,,*.flac,,*.m4a,,*.m4b,,*.mp3,,*.ogg,,*.wav::,
             \ 󰎁 ::*.avi,,*.flv,,*.m4v,,*.mkv,,*.mov,,*.mp4,,*.mpeg,,*.mpg,,*.webm::,
             \  ::*.bat,,*.conf,,*.cvs,,*.htaccess,,*.htpasswd,,*.ini,,*.rc,,*.yaml,,*.yml::,
             \  ::*.bmp,,*.gif,,*.ico,,*.jpeg,,*.jpg,,*.png,,*.ppt,,*.pptx::,
             \  ::*.c,,*.h::,
             \ 󱚚 ::*.cbr,,*.cbz::,
             \  ::*.class,,*.jar,,*.java::,
             \  ::*.clj,,*.cljc::,
             \  ::*.cljs,,*.edn::,
             \  ::*.coffee::,
             \ 󰌛 ::*.cs::,
             \  ::*.cxx,,*.c++,,*.cc,,*.cpp,,*.hh,,*.hxx,,*.hpp,,*.h++::,
             \  ::*.d::,
             \  ::*.dart::,
             \  ::*.db,,*.dump,,*.img,,*.iso,,*.sql::,
             \  ::*.diff::,
             \  ::*.dll,,*.exe,,*.msi::,
             \  ::*.doc,,*.docx,,*.epub,,*.pdf,,*.rtf,,*.xls,,*.xlsx,,*.mobi::,
             \  ::*.ejs,,*.htm,,*.html,,*.slim,,*.xhtml,,*.xml::,
             \  ::*.erl,,*.hrl::,
             \  ::*.ex,,*.exs,,*.eex::,
             \  ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::,
             \ | ::*.fifo::,
             \  ::*.go::,
             \  ::*.hbs,,*.mustache::,
             \  ::*.hs,,*.lhs::,
             \  ::*.js::,
             \  ::*.json::,
             \  ::*.jsx::,
             \  ::*.key,,*.pub::,
             \ 󰎞 ::*.log::,
             \  ::*.lua::,
             \  ::*.markdown,,*.md::,
             \ λ ::*.ml,,*.mli::,
             \  ::*.php::,
             \  ::*.pl,,*.pm,,*.t::,
             \  ::*.psb,,*.psd::,
             \  ::*.py,,*.pyc,,*.pyd,,*.pyo::,
             \  ::*.rb::,
             \  ::*.rlib,,*.rs::,
             \  ::*.rss::,
             \  ::*.scala::,
             \  ::*.scss::,
             \  ::*.sln,,*.suo::,
             \  ::*.styl::,
             \  ::*.ts::,
             \  ::*.twig::,
             \  ::*.vim,,*.vimrc::,
             \  ::*.xul::'

